// Use @use must come first before any other rules
@use "@shared/tiptap/styles/_variables.scss";

@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

body {
  --tt-toolbar-height: 44px;
  --tt-theme-text: var(--tt-gray-light-900);

  .dark & {
    --tt-theme-text: var(--tt-gray-dark-900);
  }
}

body {
  font-family: "Inter", sans-serif;
  color: var(--tt-theme-text);
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  padding: 0;
  overscroll-behavior-y: none;
}

html,
body {
  overscroll-behavior-x: none;
}

html,
body,
#root,
#app {
  height: 100%;
  background-color: var(--tt-bg-color);
}

::-webkit-scrollbar {
  width: 0.25rem;
}

* {
  scrollbar-width: thin;
  scrollbar-color: var(--tt-scrollbar-color) transparent;
}

::-webkit-scrollbar-thumb {
  background-color: var(--tt-scrollbar-color);
  border-radius: 9999px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

.tiptap.ProseMirror {
  font-family: "DM Sans", sans-serif;
}

// Important so the this does not override the editor behaviour
@media screen and (max-width: 480px) {
  .notion-like-editor-wrapper {
    width: 100vw;
    height: 100vh;
    overflow: auto;
  }
}

.notion-like-editor-wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 0;
  overflow: hidden;
}

.notion-like-editor-content {
  max-width: 768px;
  width: 100%;
  margin: 0 auto;
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
  overflow-y: auto;
  overflow-x: hidden;
}

.notion-like-editor-content .tiptap.ProseMirror.notion-like-editor {
  flex: 1;
  padding: 3rem 3rem 30vh;
  min-height: 0;
  overflow-y: visible;
  overflow-x: hidden;
}

@media screen and (max-width: 480px) {
  .notion-like-editor-content .tiptap.ProseMirror.notion-like-editor {
    padding: 1.5rem 1.5rem 30vh;
  }
}

// Ensure content doesn't interfere with sticky header
.notion-like-editor-content .tiptap.ProseMirror.notion-like-editor {
  // Prevent content from going behind the header
  scroll-margin-top: 4rem;
  
  // Ensure content is scrollable but doesn't break layout
  word-wrap: break-word;
  overflow-wrap: break-word;
  
  // Prevent horizontal overflow
  max-width: 100%;
  box-sizing: border-box;
}

// Enhanced paragraph selection styles
.notion-like-editor-content .tiptap.ProseMirror.notion-like-editor {
  // Ensure paragraph nodes are selectable
  p {
    cursor: text;
    position: relative;
    
    // Make selection more visible when paragraph is selected
    &.ProseMirror-selectednode {
      background-color: var(--tt-selection-color);
      border-radius: var(--tt-radius-sm);
      outline: 2px solid rgba(157, 138, 255, 0.3);
      outline-offset: 2px;
    }
  }
  
  // Improve general text selection visibility
  ::selection {
    background-color: var(--tt-selection-color);
  }
  
  .selection {
    background-color: var(--tt-selection-color);
    border-radius: 2px;
  }
}

// Ensure floating toolbar has proper background
.tiptap-toolbar[data-variant="floating"] {
  background-color: var(--tt-toolbar-bg-color) !important;
  border: 1px solid var(--tt-toolbar-border-color) !important;
  box-shadow: var(--tt-shadow-elevated-md) !important;
}

// Page Kit Styling for Google Docs-like page demarcation
.tk-pages-wrapper {
  background-color: var(--tt-sidebar-bg-color);
  padding: 2rem 1rem;
  min-height: 100vh;
}

.tk-page {
  background-color: var(--tt-card-bg-color);
  box-shadow: var(--tt-shadow-elevated-md);
  margin: 0 auto 2rem auto;
  border-radius: var(--tt-radius-md);
  border: 1px solid var(--tt-card-border-color);
  position: relative;
  
  // A4 page proportions (210mm x 297mm)
  &[data-page-format="A4"] {
    width: 21cm;
    min-height: 29.7cm;
    max-width: 100%;
    
    @media screen and (max-width: 768px) {
      width: 100%;
      margin: 0 auto 1rem auto;
    }
  }
}

.tk-page-content {
  padding: 2.5cm 2cm;
  min-height: 24.7cm; // A4 height minus margins
  position: relative;
  
  @media screen and (max-width: 768px) {
    padding: 1.5rem 1rem;
    min-height: auto;
  }
}

.tk-page-header,
.tk-page-footer {
  position: absolute;
  left: 2cm;
  right: 2cm;
  height: 1.5cm;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
  color: var(--tt-gray-light-500);
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  
  .dark & {
    color: var(--tt-gray-dark-500);
  }
  
  @media screen and (max-width: 768px) {
    left: 1rem;
    right: 1rem;
    font-size: 0.75rem;
  }
}

.tk-page-header {
  top: 1cm;
  border-bottom: 1px solid var(--tt-border-color-tint);
}

.tk-page-footer {
  bottom: 1cm;
  border-top: 1px solid var(--tt-border-color-tint);
}

.tk-page-break {
  background-color: var(--tt-border-color);
  height: 2px;
  margin: 1rem 0;
  border: 1px dashed var(--tt-gray-light-300);
  position: relative;
  
  .dark & {
    border-color: var(--tt-gray-dark-300);
  }
  
  &::before {
    content: "Page Break";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background-color: var(--tt-card-bg-color);
    padding: 0.25rem 0.5rem;
    font-size: 0.75rem;
    color: var(--tt-gray-light-500);
    border-radius: var(--tt-radius-xxs);
    
    .dark & {
      color: var(--tt-gray-dark-500);
    }
  }
}

// Enhanced page break hover and selection states
.tk-page-break:hover {
  border-color: var(--tt-gray-light-400);
  
  .dark & {
    border-color: var(--tt-gray-dark-400);
  }
  
  &::before {
    color: var(--tt-theme-text);
  }
}

.tk-page-break.ProseMirror-selectednode {
  border-color: var(--tt-brand-color-500);
  background-color: var(--tt-selection-color);
  
  .dark & {
    border-color: var(--tt-brand-color-400);
  }
  
  &::before {
    color: var(--tt-brand-color-500);
    
    .dark & {
      color: var(--tt-brand-color-400);
    }
  }
}

// Print styles
@media print {
  .tk-pages-wrapper {
    background-color: var(--white) !important;
    padding: 0 !important;
  }
  
  .tk-page {
    box-shadow: none !important;
    margin: 0 !important;
    border-radius: 0 !important;
    border: none !important;
    page-break-after: always;
    
    &:last-child {
      page-break-after: auto;
    }
  }
  
  .tk-page-break {
    page-break-before: always;
    height: 0 !important;
    margin: 0 !important;
    border: none !important;
    background: none !important;
    
    &::before {
      display: none !important;
    }
  }
}

// Spinner
.spinner-container {
  width: 100%;
  height: 100%;
  flex-grow: 1;
  flex-shrink: 1;
  display: flex;
  align-items: center;
  justify-content: center;

  .spinner-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;

    svg {
      animation: spin 1s linear infinite;
      height: 1.25rem;
      width: 1.25rem;

      circle {
        opacity: 0.25;
        stroke: currentColor;
        stroke-width: 4;
      }

      path {
        opacity: 0.75;
        fill: currentColor;
      }
    }

    .spinner-loading-text {
      text-align: center;
    }
  }
}
