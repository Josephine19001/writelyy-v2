// Use @use must come first before any other rules
@use "@shared/tiptap/styles/_variables.scss";

@import url("https://fonts.googleapis.com/css2?family=DM+Sans:ital,opsz,wght@0,9..40,100..1000;1,9..40,100..1000&family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

body {
  --tt-toolbar-height: 44px;
  --tt-theme-text: var(--tt-gray-light-900);

  .dark & {
    --tt-theme-text: var(--tt-gray-dark-900);
  }
}

body {
  font-family: "Inter", sans-serif;
  color: var(--tt-theme-text);
  font-optical-sizing: auto;
  font-weight: 400;
  font-style: normal;
  padding: 0;
  overscroll-behavior-y: none;
}

html,
body {
  overscroll-behavior-x: none;
}

html,
body,
#root,
#app {
  height: 100%;
  background-color: var(--tt-bg-color);
}

::-webkit-scrollbar {
  width: 0.25rem;
}

* {
  scrollbar-width: thin;
  scrollbar-color: var(--tt-scrollbar-color) transparent;
}

::-webkit-scrollbar-thumb {
  background-color: var(--tt-scrollbar-color);
  border-radius: 9999px;
}

::-webkit-scrollbar-track {
  background: transparent;
}

.tiptap.ProseMirror {
  font-family: "DM Sans", sans-serif;
}

// Important so the this does not override the editor behaviour
@media screen and (max-width: 480px) {
  .editor-wrapper {
    width: 100vw;
    height: 100vh;
    overflow: auto;
  }
}

.editor-wrapper,
.notion-like-editor-wrapper {
  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 0;
  overflow: hidden;
  background-color: hsl(var(--background));
}

.editor-content {
  max-width: 768px;
  width: 100%;
  margin: 0 auto;
  flex: 1;
  display: flex;
  flex-direction: column;
  min-height: 0;
  overflow-y: auto;
  overflow-x: hidden;
  background-color: hsl(var(--background));
}

.editor-content .tiptap.ProseMirror.editor {
  flex: 1;
  padding: 0 3rem 30vh;
  margin: 0;
  min-height: 0;
  overflow-y: visible;
  overflow-x: hidden;
  background-color: hsl(var(--background));
  border: none;
  outline: none;
  
  // Remove default ProseMirror spacing
  > *:first-child {
    margin-top: 0 !important;
    padding-top: 0 !important;
  }
}

@media screen and (max-width: 480px) {
  .editor-content .tiptap.ProseMirror.editor {
    padding: 1.5rem 1.5rem 30vh;
  }
}

// Ensure content doesn't interfere with sticky header
.editor-content .tiptap.ProseMirror.editor {
  // Prevent content from going behind the header
  scroll-margin-top: 4rem;
  
  // Ensure content is scrollable but doesn't break layout
  word-wrap: break-word;
  overflow-wrap: break-word;
  
  // Prevent horizontal overflow
  max-width: 100%;
  box-sizing: border-box;
}

// Enhanced paragraph selection styles
.editor-content .tiptap.ProseMirror.editor {
  // Ensure paragraph nodes are selectable
  p {
    cursor: text;
    position: relative;
    
    // Make selection more visible when paragraph is selected
    &.ProseMirror-selectednode {
      background-color: var(--tt-selection-color);
      border-radius: var(--tt-radius-sm);
      outline: 2px solid rgba(157, 138, 255, 0.3);
      outline-offset: 2px;
    }
  }
  
  // Improve general text selection visibility
  ::selection {
    background-color: var(--tt-selection-color);
  }
  
  .selection {
    background-color: var(--tt-selection-color);
    border-radius: 2px;
  }

  // Table styling
  table {
    border-collapse: collapse;
    table-layout: fixed;
    width: 100%;
    margin: 1rem 0;
    overflow: hidden;

    td, th {
      min-width: 1em;
      border: 1px solid #d1d5db;
      padding: 8px 12px;
      vertical-align: top;
      box-sizing: border-box;
      position: relative;

      .dark & {
        border-color: #374151;
      }

      > * {
        margin-bottom: 0;
      }
    }

    th {
      font-weight: bold;
      text-align: left;
      background-color: #f9fafb;

      .dark & {
        background-color: #1f2937;
      }
    }

    .selectedCell:after {
      z-index: 2;
      position: absolute;
      content: "";
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      background: rgba(59, 130, 246, 0.1);
      pointer-events: none;
    }

    .column-resize-handle {
      position: absolute;
      right: -2px;
      top: 0;
      bottom: -2px;
      width: 4px;
      background-color: #3b82f6;
      pointer-events: none;
    }

    p {
      margin: 0;
    }

    .tableWrapper {
      padding: 1rem 0;
      overflow-x: auto;
    }

    .resize-cursor {
      cursor: ew-resize;
      cursor: col-resize;
    }
  }

  // Custom block components selection styling
  .chart-block-wrapper,
  .snippet-block-wrapper, 
  .drawing-block-wrapper {
    &.ProseMirror-selectednode {
      outline: 2px solid #3b82f6;
      outline-offset: 2px;
      border-radius: 8px;
    }
  }
}

// Ensure floating toolbar has proper background
.tiptap-toolbar[data-variant="floating"] {
  background-color: var(--tt-toolbar-bg-color) !important;
  border: 1px solid var(--tt-toolbar-border-color) !important;
  box-shadow: var(--tt-shadow-elevated-md) !important;
}

// Page Kit Styling for Google Docs-like page demarcation
.tk-pages-wrapper {
  background-color: var(--tt-sidebar-bg-color);
  padding: 2rem 1rem;
  min-height: 100vh;
}

.tk-page {
  background-color: var(--tt-card-bg-color);
  box-shadow: var(--tt-shadow-elevated-md);
  margin: 0 auto 2rem auto;
  border-radius: var(--tt-radius-md);
  border: 1px solid var(--tt-card-border-color);
  position: relative;
  
  // A4 page proportions (210mm x 297mm)
  &[data-page-format="A4"] {
    width: 21cm;
    min-height: 29.7cm;
    max-width: 100%;
    
    @media screen and (max-width: 768px) {
      width: 100%;
      margin: 0 auto 1rem auto;
    }
  }
}

.tk-page-content {
  padding: 2.5cm 2cm;
  min-height: 24.7cm; // A4 height minus margins
  position: relative;
  
  @media screen and (max-width: 768px) {
    padding: 1.5rem 1rem;
    min-height: auto;
  }
}

.tk-page-header,
.tk-page-footer {
  position: absolute;
  left: 2cm;
  right: 2cm;
  height: 1.5cm;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.875rem;
  color: var(--tt-gray-light-500);
  border-top: 1px solid transparent;
  border-bottom: 1px solid transparent;
  
  .dark & {
    color: var(--tt-gray-dark-500);
  }
  
  @media screen and (max-width: 768px) {
    left: 1rem;
    right: 1rem;
    font-size: 0.75rem;
  }
}

.tk-page-header {
  top: 1cm;
  border-bottom: 1px solid var(--tt-border-color-tint);
}

.tk-page-footer {
  bottom: 1cm;
  border-top: 1px solid var(--tt-border-color-tint);
}

.tk-page-break {
  position: relative;
  height: 2rem;
  margin: 2rem 0;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.2s ease;

  &::before {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
    top: 50%;
    height: 1px;
    background: linear-gradient(
      to right,
      transparent 0%,
      var(--tt-gray-light-300) 10%,
      var(--tt-gray-light-300) 90%,
      transparent 100%
    );
    transform: translateY(-50%);

    .dark & {
      background: linear-gradient(
        to right,
        transparent 0%,
        var(--tt-gray-dark-300) 10%,
        var(--tt-gray-dark-300) 90%,
        transparent 100%
      );
    }
  }

  &::after {
    content: 'Page Break';
    position: relative;
    padding: 0.25rem 0.75rem;
    background: var(--background);
    color: var(--tt-gray-light-500);
    font-size: 0.75rem;
    font-weight: 500;
    letter-spacing: 0.05em;
    text-transform: uppercase;
    border-radius: 0.375rem;
    opacity: 0;
    transform: scale(0.95);
    transition: all 0.2s ease;
    pointer-events: none;

    .dark & {
      color: var(--tt-gray-dark-500);
    }
  }
}

// Modern page break hover state
.tk-page-break:hover {
  &::before {
    background: linear-gradient(
      to right,
      transparent 0%,
      var(--tt-brand-color-400) 10%,
      var(--tt-brand-color-400) 90%,
      transparent 100%
    );
    height: 2px;
  }

  &::after {
    opacity: 1;
    transform: scale(1);
    color: var(--tt-brand-color-500);
  }
}

// Modern page break selection state
.tk-page-break.ProseMirror-selectednode {
  &::before {
    background: linear-gradient(
      to right,
      transparent 0%,
      var(--tt-brand-color-500) 5%,
      var(--tt-brand-color-500) 95%,
      transparent 100%
    );
    height: 2px;
    box-shadow: 0 0 8px rgba(59, 130, 246, 0.3);
  }

  &::after {
    opacity: 1;
    transform: scale(1);
    color: var(--tt-brand-color-500);
    background: var(--tt-brand-color-50);

    .dark & {
      background: rgba(59, 130, 246, 0.1);
    }
  }
}

// Simple Tiptap Pagination Gap (Page Separator)
.tiptap-pagination-gap {
  position: relative;
  height: 2px !important;
  width: 100% !important;
  left: 0;
  margin: 1.5rem 0 !important;
  border-left: 1px solid hsl(var(--border)) !important;
  border-right: 1px solid hsl(var(--border)) !important;
  background: hsl(var(--border)) !important;
  transition: all 0.2s ease;
  cursor: pointer;

  // Hover state
  &:hover {
    background: hsl(var(--primary) / 0.5) !important;
  }

  // Selected/Active state
  &.ProseMirror-selectednode,
  &:active {
    background: hsl(var(--primary)) !important;
    height: 3px !important;
  }
}

// First Page Header - Reduce spacing
.tiptap-first-page-header {
  height: 10px !important;
  margin-top: 0 !important;
  margin-bottom: 0.5rem !important;
}

// Override PageKit's inline styles for header and footer
.tiptap-page-header,
.tiptap-page-footer {
  padding: 2rem 2rem !important;
  height: 3rem !important;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.6rem;
  color: hsl(var(--muted-foreground));

  @media screen and (max-width: 768px) {
    padding: 1rem 1rem !important;
    height: 2rem !important;
    font-size: 0.75rem;
  }
}

// Print styles
@media print {
  .tk-pages-wrapper {
    background-color: var(--white) !important;
    padding: 0 !important;
  }
  
  .tk-page {
    box-shadow: none !important;
    margin: 0 !important;
    border-radius: 0 !important;
    border: none !important;
    page-break-after: always;
    
    &:last-child {
      page-break-after: auto;
    }
  }
  
  .tk-page-break {
    page-break-before: always;
    height: 0 !important;
    margin: 0 !important;
    border: none !important;
    background: none !important;
    
    &::before {
      display: none !important;
    }
  }
}

// Spinner
.spinner-container {
  width: 100%;
  height: 100%;
  flex-grow: 1;
  flex-shrink: 1;
  display: flex;
  align-items: center;
  justify-content: center;

  .spinner-content {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;

    svg {
      animation: spin 1s linear infinite;
      height: 1.25rem;
      width: 1.25rem;

      circle {
        opacity: 0.25;
        stroke: currentColor;
        stroke-width: 4;
      }

      path {
        opacity: 0.75;
        fill: currentColor;
      }
    }

    .spinner-loading-text {
      text-align: center;
    }
  }
}
